" Vim with all enhancements
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin
" source C:\tools\Vim\settings\plugins.vim
" source C:\tools\Vim\settings\settings.vim
" source C:\tools\Vim\settings\keymaps.vim
" source C:\tools\Vim\settings\specificSetups.vim
"
" " Use the internal diff if available.
" " Use the internal diff if available.
" " Otherwise use the special 'diffexpr' for Windows.
" if &diffopt !~# 'internal'
"   set diffexpr=MyDiff()
" endif
" function MyDiff()
"   let opt = '-a --binary '
"   if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
"   if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
"   let arg1 = v:fname_in
"   if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
"   let arg1 = substitute(arg1, '!', '\!', 'g')
"   let arg2 = v:fname_new
"   if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
"   let arg2 = substitute(arg2, '!', '\!', 'g')
"   let arg3 = v:fname_out
"   if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
"   let arg3 = substitute(arg3, '!', '\!', 'g')
"   if $VIMRUNTIME =~ ' '
"     if &sh =~ '\<cmd'
"       if empty(&shellxquote)
"         let l:shxq_sav = ''
"         set shellxquote&
"       endif
"       let cmd = '"' . $VIMRUNTIME . '\diff"'
"     else
"       let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
"     endif
"   else
"     let cmd = $VIMRUNTIME . '\diff'
"   endif
"   let cmd = substitute(cmd, '!', '\!', 'g')
"   silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
"   if exists('l:shxq_sav')
"     let &shellxquote=l:shxq_sav
"   endif
" endfunction
"
"
"
" """"""""""""""""""""""""""""""""""""""
" "           Vim Start                "
" """"""""""""""""""""""""""""""""""""""
" " source $VIMRUNTIME/vimrc_example.vim
" "
" "
" " """"""""""""""""""""""""""""""""""""""
" " "            Appearance              "
" " """"""""""""""""""""""""""""""""""""""
" " colorscheme obsidian2
" colorscheme gruvbox
"
" let g:airline_theme='gruvbox'
"
" " highlight Normal guibg=none
" " map <C-F2> :set cursorcolumn!<CR>
" " " map <C-F3> :let &scrolloff=110-&scrolloff!<CR>
" " "...................................................................
" "     "Added in 2016. 9. 15 : to make cursor noticible
" " ">>>>...............................................................
" " " hi CursorLine   cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
" " " hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
" " " highlight Cursor guifg=white guibg=orange
" " " highlight iCursor guifg=white guibg=steelblue
" " " hi MatchParen guibg=NONE guifg=#ff005f gui=bold
" " "Added in 2016. 9. 15 : to make cursor noticible
" " "<<<<...............................................................
" "
" "
" "
" """""""""""""""""""""""""""""""""""""""
" "           Menu completions          "
" """""""""""""""""""""""""""""""""""""""
" "filetype plugin on
" "set omnifunc=syntaxcomplete#Complete
"
"
" """""""""""""""""""""""""""""""""""""""
" "           GUI Stuff                 "
" """""""""""""""""""""""""""""""""""""""
" set guioptions -=T
"
" """""""""""""""""""""""""""""""""""""""
" "           Spelling                  "
" """""""""""""""""""""""""""""""""""""""
" if v:version >= 700
" 	setlocal spelllang=en
" 	nmap <Space>ll :set spell!<CR>
" endif
" "   Correct some spelling mistakes    "
" ia teh      the
" ia htis     this
" ia tihs     this
" ia funciton function
" ia fucntion function
" ia funtion  function
" ia retunr   return
" ia reutrn   return
" ia sefl     self
" ia eslf     self
"
" """""""""""""""""""""""""""""""""""""""
" "           backup options            "
" """""""""""""""""""""""""""""""""""""""
" " if !isdirectory('C:/jean/tool/')
" "      call mkdir('C:/jean/tool/', "p")
" "  endif
" " if !isdirectory('C:/jean/tool/files')
" "     call mkdir('C:/jean/tool/files', "p")
" " endif
" " if !isdirectory('C:/jean/tool/files/backup')
" "     call mkdir('C:/jean/tool/files/backup', "p")
" " endif
" " if !isdirectory('C:/jean/tool/files/swap')
" "     call mkdir('C:/jean/tool/files/swap', "p")
" " endif
" " if !isdirectory('C:/jean/tool/files/undo')
" "     call mkdir('C:/jean/tool/files/undo', "p")
" " endif
" "
" "
" """"""""""""""""""""""""""""""""""""""
" "           Calendar                 "
" """"""""""""""""""""""""""""""""""""""
" noremap <Space>c :Calendar<CR>
" let g:calendar_google_calendar = 1
" let g:calendar_google_task = 1
" let g:calendar_time_zone = "{[-]0500}"
"
" """"""""""""""""""""""""""""""""""""""
" "           StartUp                  "
" """"""""""""""""""""""""""""""""""""""
" function! StartUp()
" 	" simalt ~x
" 	if 0 == argc()
" 		cd C:\Dropbox\tools\Temp\
" 		NERDTree
" 		" else 
" 		"     cd argc()
" 		"   
" 		:echom 'Hello again, world!'
" 	end
"
" endfunction
"
" autocmd VimEnter * call StartUp()
"
